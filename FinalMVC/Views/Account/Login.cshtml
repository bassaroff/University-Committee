
@model FinalMVC.Models.AuthModel
@{
    ViewBag.Title = "Выполнить вход";
}
@{
    Layout = String.Empty;
}
@Styles.Render("~/Content/login.css")
@*
    <h2>@ViewBag.Title.</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">*@
@* @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Используйте для входа локальную учетную запись.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Выполнить вход" class="btn btn-default" />
            </div>
        </div>
        <p>
            @Html.ActionLink("Регистрация нового пользователя", "Register")
        </p>*@
@* Включите, когда будет включено подтверждение учетной записи для функции сброса пароля
    <p>
        @Html.ActionLink("Забыли пароль?", "ForgotPassword")
    </p>*@
@*            }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>*@


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <!-- Including HTMLs with JQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

</head>
<!-- <body class="login"> -->
<body>
    <h2>@ViewBag.message</h2>
    <div class="container" id="container">

        <div class="form-container sign-up-container">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h1>Create Account</h1>
                <div class="social-container">
                    <a href="#" class="social"><i class="fab fa-facebook-f"></i></a>
                    <a href="#" class="social"><i class="fab fa-google-plus-g"></i></a>
                    <a href="#" class="social"><i class="fab fa-vk"></i></a>
                </div>
                <span>or use your email for registration</span>
                <div class="form-group">
                    @Html.LabelFor(m => m.registerViewModel.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.registerViewModel.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.registerViewModel.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.registerViewModel.FirstName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.registerViewModel.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.registerViewModel.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.registerViewModel.LastName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.registerViewModel.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.registerViewModel.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.registerViewModel.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.registerViewModel.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.registerViewModel.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.registerViewModel.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.registerViewModel.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.registerViewModel.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button>Sign Up</button>

            }
        </div>
        <div class="form-container sign-in-container">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
            {

                <h1>Sign in</h1>
                <div class="social-container">
                    <a href="#" class="social"><i class="fab fa-facebook-f"></i></a>
                    <a href="#" class="social"><i class="fab fa-google-plus-g"></i></a>
                    <a href="#" class="social"><i class="fab fa-vk"></i></a>
                </div>
                <span>or use your account</span>
                @Html.AntiForgeryToken()
                <h4>Используйте для входа локальную учетную запись.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.loginViewModel.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.loginViewModel.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.loginViewModel.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.loginViewModel.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.loginViewModel.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.loginViewModel.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <ul class="ks-cboxtags">
                        <li><input type="checkbox" id="loginViewModel_RememberMe" name="loginViewModel.RememberMe" value="true"><label for="loginViewModel_RememberMe">Remember me</label></li>
                    </ul>
                </div>
                <!-- <a href="#">Forgot your password?</a> -->
                <button>Sign In</button>

            }
        </div>
        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-left">
                    <h1>Welcome Back!</h1>
                    <p>To keep connected with us please login with your personal info</p>
                    <button class="ghost" id="signIn">Sign In</button>

                    <a href="/" style="color: white;"><button class="ghost" id="back">Home</button></a>


                </div>
                <div class="overlay-panel overlay-right">
                    <h1>Hello, Friend!</h1>
                    <p>Enter your personal details and start journey with us</p>
                    <button class="ghost" id="signUp">Sign Up</button>
                    <a href="/" style="color: white;"><button class="ghost" id="back">Home</button></a>
                </div>
            </div>
        </div>
    </div>
    <script>
        const signUpButton = document.getElementById('signUp');
        const signInButton = document.getElementById('signIn');
        const container = document.getElementById('container');
        const backButton = document.getElementById('back');


        signUpButton.addEventListener('click', () => {
            container.classList.add("right-panel-active");
        });

        signInButton.addEventListener('click', () => {
            container.classList.remove("right-panel-active");
        });
    </script>


</body>
</html>
